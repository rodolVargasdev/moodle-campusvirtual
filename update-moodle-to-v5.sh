#!/bin/bash

# Script para actualizar Moodle de la versi√≥n 4.4.2a 5.0 desde Google Cloud Shell
# Requiere: kubectl configurado y acceso al cluster GKE

set -e

echo "üöÄ Iniciando actualizaci√≥n de Moodle a la versi√≥n 5.0"
echo "==================================================

# Verificar que kubectl est√© configurado
if ! command -v kubectl &> /dev/null; then
    echo‚ùå Error: kubectl no est√° instalado o no est√° en el PATH  exit1
# Verificar conexi√≥n al cluster
if ! kubectl cluster-info &> /dev/null; then
    echo "‚ùå Error: No se puede conectar al cluster. Verifica tu configuraci√≥n de kubectl"
    exit 1
fi

echo "‚úÖ Conexi√≥n al cluster verificada# Verificar que el namespace moodle existe
if ! kubectl get namespace moodle &> /dev/null; then
    echo "‚ùå Error: El namespace moodle' no existe"
    exit 1
fi

echo "‚úÖ Namespace 'moodle' encontrado

#Verificar que Moodle est√© corriendo
if ! kubectl get pods -n moodle -l app=moodle &> /dev/null; then
    echo "‚ùå Error: No se encontraron pods de Moodle en el namespace moodle"   exit 1i

echo‚úÖ Pods de Moodle encontrados"

# Crear backup del deployment actual
echo üìãCreando backup del deployment actual..."
kubectl get deployment moodle -n moodle -o yaml > moodle-backup-$(date +%Y%m%d_%H%M%S).yaml
echo‚úÖ Backup creado: moodle-backup-$(date +%Y%m%d_%H%M%S).yaml"

# Verificar la versi√≥n actual
CURRENT_VERSION=$(kubectl get deployment moodle -n moodle -o jsonpath={.spec.template.spec.containers[0].image}' | cut -d':' -f2)
echo üìä Versi√≥n actual de Moodle: $CURRENT_VERSION

if [[ $CURRENT_VERSION" == "5 ]]; then
    echo "‚ÑπÔ∏è  Moodle ya est√° en la versi√≥n 50superior"
    exit 0
fi

echo "üîÑ Actualizando imagen de Moodle a la versi√≥n5...

# Actualizar la imagen a Moodle 5.0
kubectl set image deployment/moodle moodle=bitnami/moodle:5.00 -n moodle

echo "‚úÖ Imagen actualizada a bitnami/moodle:50# Esperar a que el nuevo pod est√© listo
echo ‚è≥Esperando a que el nuevo pod est√© listo..."
kubectl rollout status deployment/moodle -n moodle --timeout=30

if  $? -eq 0]; then
    echo ‚úÖ Pod actualizado exitosamente
else
    echo "‚ùå Error: El pod no se pudo actualizar correctamente"
    echo üîçRevisando logs del pod...    kubectl logs -n moodle -l app=moodle --tail=50  exit1fi

# Verificar el estado del pod
echo "üîç Verificando estado del pod...kubectl get pods -n moodle -l app=moodle

# Obtener la IP del LoadBalancer
echoüåê Obteniendo IP del LoadBalancer..."
LB_IP=$(kubectl get service moodle -n moodle -o jsonpath='{.status.loadBalancer.ingress[0].ip}' 2>/dev/null || echo "Pendiente)
if [[$LB_IP" == "Pendiente" ]]; then
    echo ‚è≥ El LoadBalancer a√∫n est√° configur√°ndose...  echoPuedes verificar el estado con: kubectl get service moodle -n moodle
else
    echo "‚úÖ Moodle est√° disponible en: http://$LB_IPfi

echo "
echoüéâ ¬°Actualizaci√≥n completada!"
echo "==============================
echo Pasos siguientes:"
echo1Accede a Moodle en tu navegador"
echo "2. Si es necesario, sigue el proceso de actualizaci√≥n web"
echo "3. Verifica que todos los plugins sean compatibles con Moodle 5.0echo "4. Revisa la documentaci√≥n oficial de Moodle50
echo
echo "üîß Comandos √∫tiles:"
echo   - Ver logs: kubectl logs -n moodle -l app=moodle -f"
echo "  - Ver estado: kubectl get pods -n moodle"
echo   - Ver servicios: kubectl get services -n moodle
echo "
echo ‚ö†Ô∏è IMPORTANTE:
echo  - Hazun backup completo de tu base de datos antes de usar Moodle 5echo "  - Verifica la compatibilidad de tus plugins y temas
echo "  - Revisa los requisitos de PHP y base de datos para Moodle50
echo 
echo üìö Documentaci√≥n:
echo "  - Moodle50ttps://docs.moodle.org/500en/Main_Page"
echo "  - Gu√≠a de actualizaci√≥n: https://docs.moodle.org/500 